<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HT32\54253\Obj\HT32.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HT32\54253\Obj\HT32.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Tue Oct  1 13:17:35 2024
<BR><P>
<H3>Maximum Stack Usage =        112 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; I2C_Configuration &rArr; I2C_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[e]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[e]">ADC_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[17]">BFTM0_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[18]">BFTM1_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[26]">BootProcess</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[d]">COMP_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[9]">EVWUP_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[12]">GPTM0_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from ht32f5xxxx_01_it.o(.text.HardFault_Handler) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[19]">I2C0_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[1a]">I2C1_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[f]">I2C2_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[23]">LEDC_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[6]">LVD_BOD_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[10]">MCTM0_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from ht32f5xxxx_01_it.o(.text.NMI_Handler) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[24]">PDMA_CH0_1_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[25]">PDMA_CH2_5_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from ht32f5xxxx_01_it.o(.text.PendSV_Handler) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[13]">SCTM0_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[14]">SCTM1_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[15]">SCTM2_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[16]">SCTM3_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[1b]">SPI0_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[1c]">SPI1_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from ht32f5xxxx_01_it.o(.text.SVC_Handler) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from ht32f5xxxx_01_it.o(.text.SysTick_Handler) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_ht32f5xxxx_09.o(.text.SystemInit) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[11]">TKEY_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[1f]">UART0_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[20]">UART1_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[21]">UART2_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[22]">UART3_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[1d]">USART0_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[1e]">USART1_IRQHandler</a> from startup_ht32f5xxxx_09.o(RESET) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ht32f5xxxx_09.o(RESET)
 <LI><a href="#[29]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>BFTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>BFTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EVWUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LEDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>LVD_BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>MCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PDMA_CH0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PDMA_CH2_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SCTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SCTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SCTM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TKEY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[45]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[46]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[47]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[48]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[49]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[3b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[4b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>AFIO_GPxConfig</STRONG> (Thumb, 100 bytes, Stack size 28 bytes, ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Configuration
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDInit
</UL>

<P><STRONG><a name="[2d]"></a>CKCU_GetClocksFrequency</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CKCU_GetClocksFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPLLFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
</UL>

<P><STRONG><a name="[2e]"></a>CKCU_GetPLLFrequency</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(.text.CKCU_GetPLLFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[2f]"></a>CKCU_GetPeripFrequency</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[38]"></a>CKCU_PeripClockConfig</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Configuration
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HT32F_DVB_ClockConfig
</UL>

<P><STRONG><a name="[42]"></a>CmpBuffer</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(.text.CmpBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmpBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Transmitter
</UL>

<P><STRONG><a name="[36]"></a>GPIO_DirectionConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDInit
</UL>

<P><STRONG><a name="[35]"></a>GPIO_DriveConfig</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_DriveConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDInit
</UL>

<P><STRONG><a name="[34]"></a>GPIO_PullResistorConfig</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PullResistorConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDInit
</UL>

<P><STRONG><a name="[30]"></a>HT32F_DVB_LEDInit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ht32_board.o(.text.HT32F_DVB_LEDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HT32F_DVB_LEDInit &rArr; _HT32F_DVB_ClockConfig &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullResistorConfig
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DriveConfig
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DirectionConfig
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDOff
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HT32F_DVB_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>HT32F_DVB_LEDOff</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32_board.o(.text.HT32F_DVB_LEDOff))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDInit
</UL>

<P><STRONG><a name="[43]"></a>HT32F_DVB_LEDOn</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32_board.o(.text.HT32F_DVB_LEDOn))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Transmitter
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>I2C_CheckStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_CheckStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Transmitter
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Receiver
</UL>

<P><STRONG><a name="[41]"></a>I2C_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Transmitter
</UL>

<P><STRONG><a name="[3a]"></a>I2C_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Configuration
</UL>

<P><STRONG><a name="[37]"></a>I2C_Configuration</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, main.o(.text.I2C_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = I2C_Configuration &rArr; I2C_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>I2C_Init</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, ht32f5xxxx_i2c.o(.text.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Configuration
</UL>

<P><STRONG><a name="[3e]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Receiver
</UL>

<P><STRONG><a name="[40]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Transmitter
</UL>

<P><STRONG><a name="[3c]"></a>I2C_Slave_Receiver</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main.o(.text.I2C_Slave_Receiver))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_Slave_Receiver
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>I2C_Slave_Transmitter</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, main.o(.text.I2C_Slave_Transmitter))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Slave_Transmitter &rArr; CmpBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckStatus
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDOn
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmpBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 220 bytes, Stack size 44 bytes, system_ht32f5xxxx_09.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>main</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = main &rArr; I2C_Configuration &rArr; I2C_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Transmitter
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Slave_Receiver
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Configuration
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[26]"></a>BootProcess</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, startup_ht32f5xxxx_09.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_09.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>_HT32F_DVB_ClockConfig</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ht32_board.o(.text._HT32F_DVB_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _HT32F_DVB_ClockConfig &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
